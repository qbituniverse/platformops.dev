apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: aks-dns-lb@platformops.dev
    privateKeySecretRef:
      name: letsencrypt
    solvers:
    - http01:
        ingress:
          class: nginx
          podTemplate:
            spec:
              nodeSelector:
                "kubernetes.io/os": linux

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-dns-lb
  namespace: aks-dns-lb
  labels:
    app: aks-dns-lb-webapp
spec:
  replicas: 1
  revisionHistoryLimit: 3
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  selector:
    matchLabels:
      app: aks-dns-lb-webapp
  template:
    metadata:
      labels:
        app: aks-dns-lb-webapp
    spec:
      containers:
      - name: aks-dns-lb-webapp
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        ports:
        - containerPort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: aks-dns-lb-webapp
  namespace: aks-dns-lb
spec:
  selector:
    app: aks-dns-lb-webapp
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aks-dns-lb-webapp
  namespace: aks-dns-lb
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  tls:
  - hosts:
    - aks-dns-lb.platformops.dev
    secretName: tls-secret
  rules:
  - host: aks-dns-lb.platformops.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aks-dns-lb-webapp
            port:
              number: 80